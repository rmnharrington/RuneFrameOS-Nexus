# RuneFrameOS Docker Compose Configuration
# Port assignments are ESTABLISHED - DO NOT CHANGE existing ports

services:
  # Central Hub - Central access point
  nexus:
    build:
      context: ./RuneFrameOS-Nexus
      dockerfile: Dockerfile
    container_name: runeframeos-nexus
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    restart: unless-stopped
    networks:
      - runeframeos-network

  # Admin Dashboard
  core:
    build:
      context: ./RuneFrameOS-Core
      dockerfile: Dockerfile
    container_name: runeframeos-core
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
    restart: unless-stopped
    networks:
      - runeframeos-network

  # Alchemy Builder & Potion Master
  distillara:
    build:
      context: ./RuneFrameOS-Distillara
      dockerfile: Dockerfile
    container_name: runeframeos-distillara
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
    restart: unless-stopped
    networks:
      - runeframeos-network

  # Inventory Management
  hoardwell:
    build:
      context: ./RuneFrameOS-Hoardwell
      dockerfile: Dockerfile
    container_name: runeframeos-hoardwell
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
    restart: unless-stopped
    networks:
      - runeframeos-network

  # Social Hub & Game Coordination
  broke-unicorn-tavern:
    build:
      context: ./RuneFrameOS-BrokeUnicornTavern
      dockerfile: Dockerfile
    container_name: runeframeos-broke-unicorn-tavern
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
    restart: unless-stopped
    networks:
      - runeframeos-network

  # Gaming Systems Library
  scriptoria:
    build:
      context: ./RuneFrameOS-Scriptoria
      dockerfile: Dockerfile
    container_name: runeframeos-scriptoria
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - PORT=3006
    restart: unless-stopped
    networks:
      - runeframeos-network

  # Undead Creation & Control
  necrotic-arcanum:
    build:
      context: ./RuneFrameOS-NecroticArcanum
      dockerfile: Dockerfile
    container_name: runeframeos-necrotic-arcanum
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - PORT=3007
    restart: unless-stopped
    networks:
      - runeframeos-network

  # Economy Management & Building
  mercatrix:
    build:
      context: ./RuneFrameOS-Mercatrix
      dockerfile: Dockerfile
    container_name: runeframeos-mercatrix
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=development
      - PORT=3008
    restart: unless-stopped
    networks:
      - runeframeos-network

  # Character Sheet Binder & Dice Roller
  personavault:
    build:
      context: ./RuneFrameOS-PersonaVault
      dockerfile: Dockerfile
    container_name: runeframeos-personavault
    ports:
      - "3009:3009"
    environment:
      - NODE_ENV=development
      - PORT=3009
    restart: unless-stopped
    networks:
      - runeframeos-network

  # GameMaster Campaign Management
  travelerstable:
    build:
      context: ./RuneFrameOS-TravelersTable
      dockerfile: Dockerfile
    container_name: runeframeos-travelerstable
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=development
      - PORT=3010
    restart: unless-stopped
    networks:
      - runeframeos-network

  # Feastwell (port 3001) - needs to be added when rebuilt
  # feastwell:
  #   build:
  #     context: ./RuneFrameOS-Feastwell
  #     dockerfile: Dockerfile
  #   container_name: runeframeos-feastwell
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3001
  #   restart: unless-stopped
  #   networks:
  #     - runeframeos-network

networks:
  runeframeos-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
